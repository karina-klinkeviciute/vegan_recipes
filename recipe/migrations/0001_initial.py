# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-01-19 22:07
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name of an ingredient', max_length=255)),
                ('description', models.TextField(blank=True, help_text='A description (optional)', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A name of a measurement, for example "kilogram"', max_length=255)),
                ('abbreviation', models.CharField(help_text='An abreviation of a measurement, for example "kg"', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(help_text='Recipe title')),
                ('time_required', models.DateTimeField(help_text='Enter total cooking time, approximately')),
                ('difficulty', models.CharField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Difficult')], max_length=255)),
                ('description', models.TextField(help_text='Enter preparation and cooking instructions here')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.ManyToManyField(help_text='select an ingredient from the list or add a new one', to='recipe.Ingredient')),
                ('measurement', models.ManyToManyField(blank=True, help_text='Select a type of measurement or add one (optional)', null=True, to='recipe.Measurement')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(help_text='select or add an ingredient with measurement', to='recipe.RecipeIngredient'),
        ),
    ]
